def qsort(arr, len) {
    def qsort_(arr, start, end) {
        def partition(arr, start, end) {
            pivot := arr[start]
            count := 0
            i := start + 1
            while(i <= end) {
                if (arr[i] <= pivot)
                    count = count + 1
                i=i+1
            }

            pivotIndex := start + count
            temp := arr[pivotIndex]
            arr[pivotIndex] = arr[start]
            arr[start] = temp

            i := start
            j := end
            while (i < pivotIndex && j > pivotIndex) {
                while (arr[i] <= pivot) i=i+1
                while (arr[j] > pivot) j=j-1

                if (i < pivotIndex && j > pivotIndex) {
                    temp := arr[i]
                    arr[i] = arr[j]
                    arr[j] = temp
                    i=i+1
                    j=j-1
                }
            }
            ret pivotIndex
        }

        if (start >= end) ret
        p := partition(arr, start, end)
        qsort_(arr, start, p-1)
        qsort_(arr, p+1, end)
    }
    qsort_(arr, 0, len-1)
}

arr := list "10, 9, 8, 7, 6, 5, 4, 3, 2, 1"
println arr
qsort(arr, 10)
println arr